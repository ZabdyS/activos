// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using activos.Models;

#nullable disable

namespace activos.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240303015456_migracion")]
    partial class migracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("activos.Models.Departamentos", b =>
                {
                    b.Property<int>("Id_departamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id_departamento");

                    b.ToTable("departamentos");
                });

            modelBuilder.Entity("activos.Models.Empleado", b =>
                {
                    b.Property<int>("Id_empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<int>("DepartamentoId_departamento")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Fecha_Ingreso")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Tipo")
                        .HasColumnType("int");

                    b.Property<int>("Id_departamento")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("tipoid_tipo")
                        .HasColumnType("int");

                    b.HasKey("Id_empleado");

                    b.HasIndex("DepartamentoId_departamento");

                    b.HasIndex("tipoid_tipo");

                    b.ToTable("empleado");
                });

            modelBuilder.Entity("activos.Models.Tipo", b =>
                {
                    b.Property<int>("id_tipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("tipo_persona")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("id_tipo");

                    b.ToTable("tipo");
                });

            modelBuilder.Entity("activos.Models.Empleado", b =>
                {
                    b.HasOne("activos.Models.Departamentos", "Departamento")
                        .WithMany("empleado")
                        .HasForeignKey("DepartamentoId_departamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("activos.Models.Tipo", "tipo")
                        .WithMany("empleado")
                        .HasForeignKey("tipoid_tipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("tipo");
                });

            modelBuilder.Entity("activos.Models.Departamentos", b =>
                {
                    b.Navigation("empleado");
                });

            modelBuilder.Entity("activos.Models.Tipo", b =>
                {
                    b.Navigation("empleado");
                });
#pragma warning restore 612, 618
        }
    }
}
